{
  "name": "vscode-operate-from-autohotkey",
  "displayName": "Operate VSCode from AutoHotkey",
  "version": "1.0.0",
  "description": "Provides a way to execute VSCode commands from AutoHotkey. Also provides command to get context information (e.g. caret position).",
  "author": "zero-plusplus <git@zero-plusplus.com>",
  "license": "MIT",
  "repository": "https://github.com/zero-plusplus/vscode-operate-from-autohotkey.git",
  "bugs": "https://github.com/zero-plusplus/vscode-operate-from-autohotkey/issues",
  "main": "./build/src/extension",
  "scripts": {
    "build": "gulp build",
    "watch": "gulp watch",
    "clean": "gulp clean",
    "lint": "gulp lint",
    "package": "gulp packaging",
    "vscode:prepublish": "gulp bundleWithoutClean"
  },
  "publisher": "zero-plusplus",
  "keywords": [
    "autohotkey"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "engines": {
    "vscode": "^1.46.0"
  },
  "icon": "image/icon.png",
  "contributes": {
    "configuration": {
      "properties": {
        "operate-from-autohotkey.allowCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed command names. Can be used as a wildcard by adding a trailing \"*\". By default, all commands are allowed.",
          "default": [
            "*"
          ]
        },
        "operate-from-autohotkey.hideError": {
          "type": "boolean",
          "description": "Whether to notify the user of an error when a command fails to execute.",
          "default": false
        },
        "operate-from-autohotkey.externalLibrary.acc": {
          "type": "string",
          "description": "Absolute path to Acc.ahk. This library is required to use some commands. See the README for details.",
          "default": "C:\\Program Files\\AutoHotkey\\lib\\Acc.ahk"
        }
      }
    },
    "commands": [
      {
        "command": "operate-from-autohotkey.executeCommand",
        "title": "Executes a command with the contents of the clipboard."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret.coordinates",
        "title": "Copy the coordinates of the caret with respect to the screen in \"x,y\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret.coordinates.x",
        "title": "Copy the x-coordinates of the caret with respect to the screen."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret.coordinates.y",
        "title": "Copy the y-coordinates of the caret with respect to the screen."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret",
        "title": "Copy the position (1-base) of the current caret in \"lineNumber:columnNumber\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret.line",
        "title": "Copy the line number (1-base) of the current caret."
      },
      {
        "command": "operate-from-autohotkey.copy.context.caret.column",
        "title": "Copy the column number (1-base) of the current caret."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection",
        "title": "Copy the range (1-base) of the current selection in \"startLineNumber:startColumnNumber:endLineNumber:endColumnNumber\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.start",
        "title": "Copy the starting position (1-base) of the current selection in \"lineNumber:columnNumber\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.start.line",
        "title": "Copy the starting line number (1-base) of the current selection."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.start.column",
        "title": "Copy the starting column number (1-base) of the current selection. Synonymous with \"operate-from-autohotkey.copy.context.caret.column\"."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.end",
        "title": "Copy the ending position (1-base) of the current selection in \"lineNumber:columnNumber\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.end.line",
        "title": "Copy the ending line number (1-base) of the current selection."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.end.column",
        "title": "Copy the ending column number (1-base) of the current selection."
      },
      {
        "command": "operate-from-autohotkey.copy.context.selection.text",
        "title": "Copy the text of the current selection."
      },
      {
        "command": "operate-from-autohotkey.copy.context.file",
        "title": "Copy the currently opened file in \"filePath:lineNumber:columnNumber\" format."
      },
      {
        "command": "operate-from-autohotkey.copy.context.file.path",
        "title": "Copy the currently opened file path."
      },
      {
        "command": "operate-from-autohotkey.copy.context.file.length",
        "title": "Copy the currently opened file length."
      },
      {
        "command": "operate-from-autohotkey.copy.context.file.eol",
        "title": "Copy the currently opened End Of Line (EOL) of the file. Value that can be gotten are \"`n\" or \"`r`n\"."
      },
      {
        "command": "operate-from-autohotkey.copy.context.json",
        "title": "Copy context information in JSON format. Besides being able to retrieve a lot of information at once, you can also retrieve information on all selections of the multi-cursor."
      },
      {
        "command": "operate-from-autohotkey.copy.context.json.pretty",
        "title": "Copy context information in human-readable JSON format. Besides being able to retrieve a lot of information at once, you can also retrieve information on all selections of the multi-cursor."
      },
      {
        "command": "operate-from-autohotkey.copy.context.flattenJson",
        "title": "Copy context information in flatten JSON format. Besides being able to retrieve a lot of information at once, you can also retrieve information on all selections of the multi-cursor."
      },
      {
        "command": "operate-from-autohotkey.copy.context.flattenJson.pretty",
        "title": "Copy context information in flatten human-readable JSON format. Besides being able to retrieve a lot of information at once, you can also retrieve information on all selections of the multi-cursor."
      }
    ],
    "keybindings": [
      {
        "key": "shift+ctrl+alt+f12",
        "command": "operate-from-autohotkey.executeCommand"
      }
    ]
  },
  "dependencies": {
    "async-lock": "^1.2.8",
    "objnest": "^5.1.0",
    "underscore": "^1.12.0"
  },
  "devDependencies": {
    "@types/async-lock": "^1.1.2",
    "@types/gulp": "^4.0.7",
    "@types/node": "^14.14.7",
    "@types/underscore": "^1.10.24",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^4.7.0",
    "@typescript-eslint/parser": "^4.7.0",
    "@zero-plusplus/eslint-my-rules": "^1.0.22",
    "del": "^6.0.0",
    "eslint": "^7.13.0",
    "fork-ts-checker-webpack-plugin": "^6.0.8",
    "gulp": "^4.0.2",
    "gulp-run-command": "^0.0.10",
    "source-map-support": "^0.5.19",
    "ts-loader": "^8.0.13",
    "ts-node": "^9.0.0",
    "types-tsconfig": "^1.2.0",
    "typescript": "^4.0.5",
    "webpack": "^5.11.1",
    "webpack-merge": "^5.7.3"
  }
}
